---
swagger: "2.0"
info:
  description: "This is a sample API Documentation about FIFA news. The api consumes\
    \ the data from the official FIFA RSS-feed https://www.fifa.com/rss-feeds/ You\
    \ can use this API as long as the fifa rss-feed is available."
  version: "1.0.0"
  title: "Swagger API FIFA News"
  termsOfService: "https://apififa.herokuapp.com"
  contact:
    email: "richych92@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/api"
tags:
- name: "news"
  description: "All news about soccer by FIFA"
  externalDocs:
    description: "Find out more"
    url: "https://www.fifa.com/"
schemes:
- "http"
paths:
  /news:
    get:
      tags:
      - "news"
      summary: "Finds news soccer by type of news"
      description: "You can choose a type of news sending the query 't' param in the\
        \ request"
      operationId: "findNewsSoccer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        description: "Type news that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResSuccessNews"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "News"
definitions:
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      success:
        type: "boolean"
  ResSuccessNews:
    type: "object"
    properties:
      success:
        type: "boolean"
        description: "success: notifies the user if the server response is successful\
          \ or not."
      code:
        type: "integer"
        description: "code: notifies the user a response code. If the code value is\
          \  == -1 then the operation was success, if the code value is >1 someting\
          \ went wrong, if the code value is == 1000 an exception occurred."
      data:
        $ref: "#/definitions/DataNews"
      message:
        type: "string"
        description: "message: a short description about the response."
    example:
      code: 0
      data:
        feedUrl: "feedUrl"
        link: "link"
        count: 6
        description: "description"
        language: "language"
        title: "title"
        items:
        - creator: "creator"
          link: "link"
          content:encodedSnippet: "content:encodedSnippet"
          dc:creator: "dc:creator"
          guid: "guid"
          categories:
          - "categories"
          - "categories"
          isoDate: "isoDate"
          title: "title"
          content:encoded: "content:encoded"
          pubDate: "pubDate"
          content: "content"
          contentSnippet: "contentSnippet"
        - creator: "creator"
          link: "link"
          content:encodedSnippet: "content:encodedSnippet"
          dc:creator: "dc:creator"
          guid: "guid"
          categories:
          - "categories"
          - "categories"
          isoDate: "isoDate"
          title: "title"
          content:encoded: "content:encoded"
          pubDate: "pubDate"
          content: "content"
          contentSnippet: "contentSnippet"
      success: true
      message: "message"
  DataNews:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Items"
      feedUrl:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      link:
        type: "string"
      language:
        type: "string"
      count:
        type: "integer"
    example:
      feedUrl: "feedUrl"
      link: "link"
      count: 6
      description: "description"
      language: "language"
      title: "title"
      items:
      - creator: "creator"
        link: "link"
        content:encodedSnippet: "content:encodedSnippet"
        dc:creator: "dc:creator"
        guid: "guid"
        categories:
        - "categories"
        - "categories"
        isoDate: "isoDate"
        title: "title"
        content:encoded: "content:encoded"
        pubDate: "pubDate"
        content: "content"
        contentSnippet: "contentSnippet"
      - creator: "creator"
        link: "link"
        content:encodedSnippet: "content:encodedSnippet"
        dc:creator: "dc:creator"
        guid: "guid"
        categories:
        - "categories"
        - "categories"
        isoDate: "isoDate"
        title: "title"
        content:encoded: "content:encoded"
        pubDate: "pubDate"
        content: "content"
        contentSnippet: "contentSnippet"
  Items:
    type: "object"
    properties:
      creator:
        type: "string"
      title:
        type: "string"
      link:
        type: "string"
      pubDate:
        type: "string"
      content:encoded:
        type: "string"
      content:encodedSnippet:
        type: "string"
      dc:creator:
        type: "string"
      content:
        type: "string"
      contentSnippet:
        type: "string"
      guid:
        type: "string"
      categories:
        type: "array"
        items:
          type: "string"
      isoDate:
        type: "string"
    example:
      creator: "creator"
      link: "link"
      content:encodedSnippet: "content:encodedSnippet"
      dc:creator: "dc:creator"
      guid: "guid"
      categories:
      - "categories"
      - "categories"
      isoDate: "isoDate"
      title: "title"
      content:encoded: "content:encoded"
      pubDate: "pubDate"
      content: "content"
      contentSnippet: "contentSnippet"
